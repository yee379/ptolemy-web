<div class="row-fluid span12">
  <h1>Network Devices</h1>
</div>

<div class="row-fluid span12">

  <div class="span2">

    <div class="well sidebar-nav">
      <form class="form-search" onsubmit="return false;">
        <div class="input-append span12 input-block-level">
          <span class="add-on"><i class="icon-search"></i></span> 
          <input class="input-wrapper" type="text">
        </div> 
      </form>
    </div>

    <div class="well sidebar-nav facet" for="models"></div>
    <div class="well sidebar-nav facet" for="sw_versions"></div>
    <div class="well sidebar-nav facet" for="type"></div>
    <div class="well sidebar-nav facet" for="groups"></div>
    <div class="well sidebar-nav facet" for="categories"></div>
    <div class="well sidebar-nav facet" for="member_count"></div>
  
  </div>

  <div class="span10">
  
    <table class="dataTable devices-table table-striped table-bordered table-condensed table-hover"></table>

  </div>

  <div style="visibility: hidden">
    <div id="data_href"><%= devices_path %>.json</div>
    <div id="dataTables_swf"><%= asset_path('copy_csv_xls_pdf.swf') %></div>
  </div>

</div>

<%= coffee_script_tag do %>

jQuery -> 

  # intiate any datatables we have
  oTable = $('.dataTable').dataTable
    # data
    sAjaxSource:  $('#data_href').text()
    sAjaxDataProp: "",
    bDeferRender: true,
    # TODO: upgrade of datatables
    #  - data -> mData
    #  - fnRender -> mRender
    "columns": [
      data: "device"
      title: "Device"
      defaultContent: "-"
      # sWidth: "15%"
      mRender: (obj,type,row) ->
        return row['device'].split("\.").shift()
    ,
      data: "type"
      title: "Type"
      defaultContent: "-"
    ,
      data: "groups"
      title: "Group(s)"
      defaultContent: "-"
    ,
      data: "categories"
      title: "Categories"
      defaultContent: "-"
    ,
      data: "location"
      title: "Location"
      defaultContent: "-"
    ,
      data: "member_count"
      title: "#"
      defaultContent: "-"
    ,
      data: "models"
      title: "Model(s)"
      defaultContent: "-"
      mRender: (obj,type,row) ->
        seen = []
        if row.members instanceof Array
          for m in row.members
            seen.push m['model']
        return seen.join(', ')
    ,
      data: "sw_versions"
      title: "Firmware(s)"
      defaultContent: "-"
      mRender: (obj,type,row) ->
        seen = []
        if row.members instanceof Array
          for m in row.members
            s = m['sw_rev']
            seen.push s
        return seen.join(', ')
    ,
      data: "serials"
      title: "Property Control"
      defaultContent: "-"
      mRender: (obj,type,row) ->
        seen = []
        if row.members instanceof Array
          for m in row.members
            s = m['serial']
            if m['pc_number']?
              s = s + ' (' + m['pc_number'] + ')'
            seen.push s
        return seen.join(', ')
    ,
    #   data: "location.building"
    #   title: "Building"
    #   defaultContent: "-"
    # ,
    #   data: "location.floor"
    #   title: "Floor"
    #   defaultContent: "-"
    # ,
    #   data: "location.rack"
    #   title: "Rack"
    #   defaultContent: "-"
    # ,
    #   data: "age"
    #   title: "Age (months)"
    #   defaultContent: "-"
    # ,
      data: "updated_at"
      title: "Last Seen"
      defaultContent: "-"
      sType: 'seen'
      mRender: (obj,type,row) ->
        jQuery.timeago(row.updated_at)
    ]
    # ui
    bProcessing: true
    bSort: true
    bJqueryUI:  true
    iDisplayLength: -1
    bAutoWidth: false
    # export types
    oTableTools:
      sSwfPath: $('#dataTables_swf').text()
    sDom:       '<"pull-left"i><"pull-right"T><"span12"t>r<"clear">'
    fnDrawCallback: () ->
      # console.log 'assigning click'
      # set up device column (1) so they are clickable
      $('tbody > tr > td:nth-child(1)').each () ->
        $(this).addClass "href"
        $(this).bind( 'click', () ->
          console.log $(this).text()
          window.location.href = "/ports/" + $(this).text() + '.slac.stanford.edu'
        )  
    fnInitComplete: () ->
      createFacet()
    fnRowCallback: ( nRow, aData, iDisplayIndex, iDisplayIndexFull ) ->
      mapping = {
          'groups': 2,
          'categories': 3,
          'models': 6,
          'sw_versions': 7,
          'serials': 8,
      }
      for k,v of aData
        if v instanceof Array
          n = mapping[k]
          $('td:eq('+n+')', nRow).html( aData[k].join(', ') )
          
  createFacet = ->
    oTable.facets()
  
  $('input[type="text"]').keyup( () ->
    item = $(this).val()
    delay( ()->
      oTable.fnFilter( item )
      oTable.fnUpdateFacets()    
    , 300 )
  )
  
  $('.facet').resizable(
      minHeight: 125,
      minWidth: 175,
      # alsoResize: '.facet .facet-frame',
      # resize: (e,ui) ->
      #   ui.size.width = ui.originalSize.width
  )
  return


<% end %>
